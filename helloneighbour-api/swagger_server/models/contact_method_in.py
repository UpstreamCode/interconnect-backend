# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ContactMethodIn(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, label: str=None, contact_details: str=None, user: str=None):  # noqa: E501
        """ContactMethodIn - a model defined in Swagger

        :param label: The label of this ContactMethodIn.  # noqa: E501
        :type label: str
        :param contact_details: The contact_details of this ContactMethodIn.  # noqa: E501
        :type contact_details: str
        :param user: The user of this ContactMethodIn.  # noqa: E501
        :type user: str
        """
        self.swagger_types = {
            'label': str,
            'contact_details': str,
            'user': str
        }

        self.attribute_map = {
            'label': 'label',
            'contact_details': 'contactDetails',
            'user': 'user'
        }

        self._label = label
        self._contact_details = contact_details
        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'ContactMethodIn':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ContactMethodIn of this ContactMethodIn.  # noqa: E501
        :rtype: ContactMethodIn
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self) -> str:
        """Gets the label of this ContactMethodIn.


        :return: The label of this ContactMethodIn.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this ContactMethodIn.


        :param label: The label of this ContactMethodIn.
        :type label: str
        """

        self._label = label

    @property
    def contact_details(self) -> str:
        """Gets the contact_details of this ContactMethodIn.


        :return: The contact_details of this ContactMethodIn.
        :rtype: str
        """
        return self._contact_details

    @contact_details.setter
    def contact_details(self, contact_details: str):
        """Sets the contact_details of this ContactMethodIn.


        :param contact_details: The contact_details of this ContactMethodIn.
        :type contact_details: str
        """

        self._contact_details = contact_details

    @property
    def user(self) -> str:
        """Gets the user of this ContactMethodIn.


        :return: The user of this ContactMethodIn.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user: str):
        """Sets the user of this ContactMethodIn.


        :param user: The user of this ContactMethodIn.
        :type user: str
        """

        self._user = user
